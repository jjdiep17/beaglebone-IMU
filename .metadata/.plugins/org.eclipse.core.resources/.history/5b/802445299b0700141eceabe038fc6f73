/*
 * HelloCross.cpp
 *
 *  Created on: Jul 7, 2014
 *      Author: jdiep
 */

#include <iostream>
#include <stdio.h>
#include <unistd.h>
using namespace std;
#define MAX 64

int flashGPIOLED(int, int);
int readButton(int);

int main() {
	readButton(117);
	flashGPIOLED(60, 5);
	return 0;
}

int flashGPIOLED(int GPIOPin, int times) {
	cout << "GPIO LED Flash Pin:" << GPIOPin << " start" << endl;
	FILE *LEDHandle = NULL;
	char setValue[4], GPIOString[4], GPIOValue[MAX], GPIODirection[MAX];
	sprintf(GPIOString, "%d", GPIOPin);
	sprintf(GPIOValue, "/sys/class/gpio/gpio%d/value", GPIOPin);
	sprintf(GPIODirection, "/sys/class/gpio/gpio%d/direction", GPIOPin);
}

// Export the pin
if ((LEDHandle = fopen("/sys/class/gpio/export", "ab")) == NULL
{
		printf("Cannot export the GPIO pin.\n");
		return 1;
}
strcpy(setValue, "out");
fwrite(&setValue, sizeof(char), 3, LEDHandle);
fclose(LEDHandle);

// Flash the LED int times
for(int i=0; i<(times*2); i++{
		if ((LEDHandle = fopen(GPIOValue, "rb+")) == NULL){
			printf("Cannot open value handle.\n");
			return 1;
		}
}
